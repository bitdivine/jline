{"name":"Jline","tagline":"Sort, grep and join files where every line is JSON.  21C command line reality.","body":"Sort, grep and join files where every line is JSON.  JSON has long surpassed CSV as the most common, useful and robust format in much of the code that I encounter but as yet it has no parallel to the array of fine tuned command line tools that target CSV.  This collection fills some of the gaps.\r\n\r\nThe JSON lines format is formally described at [http://jsonlines.org/](http://jsonlines.org/).  Other pages of interest are [Wikipedia](https://en.wikipedia.org/wiki/Line_Delimited_JSON) and [Newline Delimited JSON](http://trephine.org/t/index.php?title=Newline_delimited_JSON).\r\n\r\n# Installation\r\n\r\n    npm install -g jline\r\n\r\n# Examples\r\n\r\nAssume a file `dat.jsonl` with lines:\r\n\r\n    {\"foo\":{\"bar\":9,\"bat\":49},\"mitz\":\"ding\"}\r\n    {\"foo\":{\"bar\":4,\"bat\":9},\"mitz\":\"do\"}\r\n    {\"foo\":{\"bar\":6,\"bat\":17},\"mitz\":\"mnogo\"}\r\n\r\nThen:\r\n\r\n    cat dat.jsonl | jline-sort foo.bar                        # Sorts on the key foo.bar\r\n    cat dat.jsonl | jline-filter 'foo.bat>9'                  # Selects just those lines\r\n    cat dat.jsonl | jline-select foo.bar:bar foo.bat:bat mitz # Returns lines such as {\"bar\":9,\"bat\":49,\"mitz\":\"ding\"}\r\n    ... etc\r\n\r\n# Documentation\r\n\r\nUse `--help` or refer to the markdown files:\r\n\r\n### Manipulate jlines\r\n* [clean](./bin/clean.md) - keeps only well formed JSON lines\r\n* [filter](./bin/filter.md) - Keeps only the records you choose.\r\n* [parsePath](./bin/parsePath.md) `'abba.cadabba[4].u' -> ['abba','cadabba',4,'u']`\r\n* [sort](./bin/sort.md) - sorts by a given key.\r\n* [select](./bin/select.md) - Selects just a few fields from each record.\r\n\r\n### Power Tools\r\n* [map](./bin/map.md) - Execute arbitrary code for each record and print the updated record.\r\n* [foreach](./bin/foreach.md) - Execute arbitrary code for each record.  Awk for JSON lines.\r\n\r\n### Output\r\n* [pretty](./bin/pretty.md) - Pretty prints the JSON.\r\n* [csv](./bin/csv.md) - converts to csv\r\n\r\n### Input\r\n* [jline-mysql2jl](bin/mysql2jl.md) - EXPERIMENTAL - mysql output to JSON dictionaries\r\n* [jline-mysql2jla](bin/mysql2jla.md) - EXPERIMENTAL - mysql output to JSON arrays\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}